---
iosrtrstig_cat1_patch: true
iosrtrstig_cat2_patch: false
iosrtrstig_cat3_patch: false

# We've defined complexity-high to mean that we cannot automatically remediate
# the rule in question.  In the future this might mean that the remediation
# may fail in some cases.
iosrtrstig_complexity_high: false

# We've defined disruption-high to indicate items that are likely to cause
# disruption in a normal workflow.  These items can be remediated automatically
# but are disabled by default to avoid disruption.
iosrtrstig_disruption_high: true

# Whether to skip the reboot
iosrtrstig_skip_reboot: true

# Defined will change if control requires
change_requires_reboot: false

# DODIN Backbone Applicable Check
# If you are on a DODIN Backbone set the toggle to true.  This will skip the controls that arenot applicable 
# for the STIG.  Setting to false will allow the controls to run.  
########### Control 400 Questionable for this review late ###########
cisc_rt_dodin_backbone: false

# These variables correspond with the STIG IDs defined in the STIG and allows you to enable/disable specific rules.
# PLEASE NOTE: These work in coordination with the cat1, cat2, cat3 group variables. You must enable an entire group
# in order for the variables below to take effect.

# CAT 1 rules
cisc_rt_000130: false
cisc_rt_000240: false
cisc_rt_000280: false
cisc_rt_000290: true
cisc_rt_000630: false
cisc_rt_000640: false
cisc_rt_000670: false
cisc_rt_000730: false
cisc_rt_000310: false

# CAT 2 rules
cisc_rt_000010: false
cisc_rt_000040: false
cisc_rt_000050: false
cisc_rt_000090: false
cisc_rt_000120: false
cisc_rt_000140: false
cisc_rt_000150: false
cisc_rt_000170: false
cisc_rt_000180: false
cisc_rt_000190: false
cisc_rt_000210: false
cisc_rt_000220: false
cisc_rt_000250: false
cisc_rt_000260: false
cisc_rt_000270: false
cisc_rt_000320: false
cisc_rt_000330: false
cisc_rt_000340: false
cisc_rt_000380: false
cisc_rt_000390: false
cisc_rt_000400: false
cisc_rt_000410: false
cisc_rt_000420: false
cisc_rt_000430: false
cisc_rt_000440: false
cisc_rt_000450: false
cisc_rt_000460: false
cisc_rt_000490: false
cisc_rt_000500: false
cisc_rt_000510: false
cisc_rt_000520: false
cisc_rt_000530: false
cisc_rt_000560: false
cisc_rt_000620: false
cisc_rt_000650: false
cisc_rt_000660: false
cisc_rt_000740: false
cisc_rt_000780: false
cisc_rt_000790: false
cisc_rt_000800: false
cisc_rt_000850: false
cisc_rt_000870: false
cisc_rt_000880: false
cisc_rt_000890: false
cisc_rt_000900: false
cisc_rt_000910: false
cisc_rt_000020: false
cisc_rt_000030: false
cisc_rt_000080: false
cisc_rt_000350: false
cisc_rt_000480: false
cisc_rt_000750: false
cisc_rt_000235: false
cisc_rt_000237: false
cisc_rt_000391: false
cisc_rt_000392: false
cisc_rt_000393: false
cisc_rt_000394: false
cisc_rt_000395: false
cisc_rt_000396: false
cisc_rt_000397: false
cisc_rt_000398: false

# CAT 3 rules
cisc_rt_000060: false
cisc_rt_000070: false
cisc_rt_000160: false
cisc_rt_000200: false
cisc_rt_000230: false
cisc_rt_000300: false
cisc_rt_000360: false
cisc_rt_000370: false
cisc_rt_000540: false
cisc_rt_000550: false
cisc_rt_000570: false
cisc_rt_000580: false
cisc_rt_000590: false
cisc_rt_000600: false
cisc_rt_000610: false
cisc_rt_000760: false
cisc_rt_000770: false
cisc_rt_000810: false
cisc_rt_000820: false
cisc_rt_000830: false
cisc_rt_000840: false
cisc_rt_000860: false
cisc_rt_000920: false
cisc_rt_000930: false
cisc_rt_000940: false
cisc_rt_000950: false
cisc_rt_000470: false
cisc_rt_000236: false
cisc_rt_acl: false
cisc_rt_bgp: false
cisc_rt_route_maps: false
cisc_rt_prefix_lists: false
cisc_rt_ospf_maps: false
cisc_rt_static_routes: false









# Global Variables Interfaces
# Here are some examples of the values expected in the range.
# GigabitEthernet 1/0/8 <--- Port 8
# GigabitEthernet 1/0/8-10 <--- Ports 8-10
# GigabitEthernet 1/0/8-10,GigabitEthernet 1/0/13  <--- Ports 8-10 and 13
# GigabitEthernet 1/0/8-10,GigabitEthernet 1/0/25-28,GigabitEthernet 1/0/16-20 <--- Ports 8-10, 25-28, and 16-20

# iosrtr_all_interfaces
iosrtr_all_interfaces: 
    - FastEthernet0/0
    - FastEthernet0/1
    - Serial1/0
    - Serial1/1
    - Serial1/2
    - Serial1/3
    - FastEthernet2/0

#EXTERNAL FACING PORTS
# iosrtr_external_ipv6_interfaces
# These are external IPv6-enabled interfaces.  
iosrtr_external_ipv6_interfaces: "FastEthernet 0/0"




# iosrtr_inactive_interfaces
iosrtr_inactive_interfaces: 
  - Serial1/1
  - Serial1/2
  - Serial1/3


# Global Variables ACLs

# Standard ACLs


iosrtr_rendezvous_point_router_ip_address_for_group: 10.2.2.2




isortr_loopback_0_ip_address: 





# iosrtr_unused_ports






# CISC-RT-000580
iosrtr_local_bgp_autonomous_system_number: "1123"












# Cat 1
# ----------------------------------------------------
# CISC-RT-000130
# iosrtr_external_acl_name_old is the name of the old access control list that is configured to restrict traffic destined to iteself.  
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_external_acl_name_old: "EXTERNAL_ACL"
# iosrtr_external_acl_name_new is the name of access control list that is configured to restrict traffic destined to iteself.  Review the 
# Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic
# from specific sources destined to itself.
iosrtr_external_acl_name_new: "EXTERNAL_ACL"
# iosrtr_external_acl_interfaces are the interfaces on the device that will have the access control list assigned to it.  
iosrtr_external_acl_interfaces:
    - "FastEthernet2/0"
# iosrtr_external_acl_type is for a standard or extended access-list.  In this case it should be set for extended. 
iosrtr_external_acl_type: "extended"
# iosrtr_external_acl is the Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic from specific sources destined to itself.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
#  - {seq: , grant: , protocol: , source_any: , source_host: , source_address: , source_wildcard_bits: , source_port_protocol_eq: , destination_any: , destination_host: , destination_address: , destination_wildcard_bits: , destination_port_protocol_eq: , protocol_options_tcp_established: , protocol_options_icmp_echo: , protocol_options_icmp_echo_reply: , log_input: }
# The configuration below yields the following example on the router.
#ip access-list extended EXTERNAL_ACL
# permit tcp host 1.11.1.1 eq bgp host 1.11.1.2
# permit tcp host 1.11.1.1 host 1.11.1.2 eq bgp
# permit icmp host 1.11.1.1 host 1.11.1.2 echo
# permit icmp host 1.11.1.1 host 1.11.1.2 echo-reply
# deny   ip any host 1.11.1.2 log-input
# deny   ip any any log-input
iosrtr_external_acl:
    - {seq: 10, grant: permit, protocol: tcp, source_host: 1.11.1.1, source_port_protocol_eq: bgp, destination_host: 1.11.1.2}
    - {seq: 20, grant: permit, protocol: tcp, source_host: 1.11.1.1, destination_host: 1.11.1.2, destination_port_protocol_eq: bgp}
    - {seq: 30, grant: permit, protocol: icmp, source_host: 1.11.1.1, destination_host: 1.11.1.2, protocol_options_icmp_echo: true}
    - {seq: 40, grant: permit, protocol: icmp, source_host: 1.11.1.1, destination_host: 1.11.1.2,  protocol_options_icmp_echo_reply: true}
    - {seq: 50, grant: deny, protocol: ip , source_any: true, destination_host: 1.11.1.2, log_input: true}
    - {seq: 200, grant: deny, protocol: ip, source_any: true, destination_any: true, log_input: true}

# iosrtr_internal_acl_name_old is the name of the old access control list that is configured to restrict traffic destined to iteself.  
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_internal_acl_name_old: "INTERNAL_ACL"
# iosrtr_internal_acl_name_new is the name of access control list that is configured to restrict traffic destined to iteself.  Review the 
# Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic
# from specific sources destined to itself.
iosrtr_internal_acl_name_new: "INTERNAL_ACL"
# iosrtr_internal_acl_interfaces are the interfaces on the device that will have the access control list assigned to it.  
iosrtr_internal_acl_interfaces:
    - "FastEthernet0/0"
    - "FastEthernet0/1"
# iosrtr_internal_acl_type is for a standard or extended access-list.  In this case it should be set for extended. 
iosrtr_internal_acl_type: "extended"
# iosrtr_internal_acl is the Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic from specific sources destined to itself.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
#  - {seq: , grant: , protocol: , source_any: , source_host: , source_address: , source_wildcard_bits: , source_port_protocol_eq: , destination_any: , destination_host: , destination_address: , destination_wildcard_bits: , destination_port_protocol_eq: , protocol_options_tcp_established: , protocol_options_icmp_echo: , protocol_options_icmp_echo_reply: , log_input: }
# The configuration below yields the following example on the router.
#ip access-list extended INTERNAL_ACL
# permit ospf host 10.1.12.1 host 10.1.12.2
# permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq 22
# permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq tacacs
# permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq snmp
# permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq ntp
# deny   ip any host 10.1.12.2 log-input
# permit ip any any log-input
iosrtr_internal_acl:
    - {seq: 10, grant: permit, protocol: ospf, source_host: 10.1.12.1, destination_host: 10.1.12.2}
    - {seq: 20, grant: permit, protocol: tcp, source_address: 10.2.1.0, source_wildcard_bits: 0.0.0.255, destination_host: 10.1.12.2, destination_port_protocol_eq: 22}
    - {seq: 30, grant: permit, protocol: tcp, source_address: 10.2.1.0, source_wildcard_bits: 0.0.0.255, destination_host: 10.1.12.2, destination_port_protocol_eq: tacacs}
    - {seq: 40, grant: permit, protocol: udp, source_address: 10.2.1.0, source_wildcard_bits: 0.0.0.255, destination_host: 10.1.12.2, destination_port_protocol_eq: snmp}
    - {seq: 50, grant: permit, protocol: udp, source_address: 10.2.1.0, source_wildcard_bits: 0.0.0.255, destination_host: 10.1.12.2, destination_port_protocol_eq: ntp}
    - {seq: 60, grant: deny, protocol: ip, source_any: true, destination_host: 10.1.12.2, log_input: true}
    - {seq: 200, grant: permit, protocol: ip, source_any: true, destination_any: true, log_input: true}


# CISC-RT-000280
# iosrtr_filter_isp_name_old is the name of the old access control list that is configured to restrict traffic destined to iteself.  Review the 
# Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic
# from specific sources destined to itself.  It is used to protect an enclave connected to an alternate gateway by using an 
# inbound filter that only permits packets with destination addresses within the sites address space.
iosrtr_filter_isp_name_old: "FILTER_ISP"
# iosrtr_external_acl_name_new is the name of access control list that is configured to restrict traffic destined to iteself.  Review the 
# Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic
# from specific sources destined to itself.  It is used to protect an enclave connected to an alternate gateway by using an 
# inbound filter that only permits packets with destination addresses within the sites address space.
iosrtr_filter_isp_acl_name_new: "FILTER_ISP"
# iosrtr_filter_isp_description_name is the interface description that lets you know what it is used for.  
iosrtr_filter_isp_description_name: "Link to ISP"
# iosrtr_filter_isp_acl_interfaces are the interfaces on the device that will have the access control list assigned to it.  
iosrtr_filter_isp_acl_interfaces:
    - "Serial1/0"
# iosrtr_filter_isp_interface_description is variable to assign a description to the interface for this acl filter. 
iosrtr_filter_isp_interface_description: "Link to ISP"
# iosrtr_filter_isp_acl_type is for a standard or extended access-list.  In this case it should be set for extended. 
iosrtr_filter_isp_acl_type: "extended"
# iosrtr_filter_isp_acl is the Access Control Lists (ACLs) used to Configure the ingress ACL of the perimeter router connected to an alternate gateway to only permit packets with destination addresses of the 
# site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider as shown in the example below.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
#  - {seq: , grant: , protocol: , source_any: , source_host: , source_address: , source_wildcard_bits: , source_port_protocol_eq: , destination_any: , destination_host: , destination_address: , destination_wildcard_bits: , destination_port_protocol_eq: , protocol_options_tcp_established: , protocol_options_icmp_echo: , protocol_options_icmp_echo_reply: , log_input: }
# The configuration below yields the following example on the router.
#ip access-list extended FILTER_ISP
# permit tcp any any established
# permit icmp host 1.12.1.16 host 1.12.1.17 echo
# permit icmp host 1.12.1.16 host 1.12.1.17 echo-reply
# permit tcp any host 1.12.1.22 eq www
# permit tcp any host 1.12.1.23 eq www
# permit esp any host 1.12.1.24
# permit ahp any host 1.12.1.24
# deny   ip any any log-input
iosrtr_filter_isp_acl:
    - {seq: 10, grant: permit, protocol: tcp, source_any: true, destination_any: true, protocol_options_tcp_established: true}
    - {seq: 20, grant: permit, protocol: icmp, source_host: 1.12.1.16, destination_host: 1.12.1.17, protocol_options_icmp_echo: true}
    - {seq: 30, grant: permit, protocol: icmp, source_host: 1.12.1.16, destination_host: 1.12.1.17, protocol_options_icmp_echo_reply: true}
    - {seq: 40, grant: permit, protocol: tcp, source_any: true, destination_host: 1.12.1.22, destination_port_protocol_eq: www}
    - {seq: 50, grant: permit, protocol: tcp, source_any: true, destination_host: 1.12.1.23, destination_port_protocol_eq: www}
    - {seq: 60, grant: permit, protocol: 50, source_any: true, destination_host: 1.12.1.24}
    - {seq: 70, grant: permit, protocol: 51, source_any: true, destination_host: 1.12.1.24}
    - {seq: 200, grant: deny, protocol: ip, source_any: true, destination_any: true, log_input: true}


# CISC-RT-000290
# iosrtr_isp_router_ip_address is the ip address of the service provider router.  This is used to check for BGP peering with the service provder. 
# The line below is the current variables that are configured to be used on the STIG example. 
iosrtr_isp_router_ip_address: 
  - "1.22.1.16"






























# Cat 2
# CISC-RT-000392


# Cat 3


#CISC-RT-000070
# Not all Cisco Routers support these services please make sure you check your documentation.
# Review the router configuration to verify that the switch does not have any unnecessary 
# or non-secure services enabled. 
# For example, the following commands should not be in the configuration: 
# - boot network
# - ip boot server
# - ip bootp server
# - ip dns server
# - ip identd
# - ip finger
# - ip http server
# - ip rcmd rcp-enable 
# - ip rcmd rsh-enable **
# - service config
# - service finger
# - service tcp-small-servers
# - service udp-small-servers
# - service pad
iosrtr_non_essential_serv:
    - boot network
    - ip boot server
    - ip bootp server
    - ip dns server
    - ip identd
    - ip finger
    - ip http server
    - ip rcmd rcp-enable 
    - ip rcmd rsh-enable
    - service config
    - service finger
    - service tcp-small-servers
    - service udp-small-servers
    - service pad





# CISC-RT-000200
# iosrtr_acl_dropped_packet_log is the configuration to fix all Access Control Lists(ACLs) used to filter traffic and verify 
# that packets being dropped are logged as shown in the configuration below.  I have made the STIG example a sequence 300
# to allow for additional lines for configuration.  This merges the line to the active ACL that is currently in place.  
# - {name: , acl_type: , seq: , grant: , protocol: , source_any: , destination_any: , log_set: }
# The configuration below yields the following example on the router.
# ip access-list extended INGRESS_FILTER
# deny ip any any log
iosrtr_acl_dropped_packet_log:
    - {name: INGRESS_FILTER, acl_type: extended, seq: 300, grant: deny, protocol: ip, source_any: true, destination_any: true, log_set: true}


# CISC-RT-000236
# iosrtr_ipv6_hop_limit is the hop limit for Router Advertisement messages.
# Configure the router to advertise a hop limit of at least 32 in Router Advertisement messages.
# The fix text calls for a limit of 128. 
iosrtr_ipv6_hop_limit: "129"







# CISC-RT-000300
# Below is where you will add the static routes with the alternate gateway as the next-hop address.  
iosrtr_static_route_with_alternate_gateway_as_next_hop:
    - {seq: 10, grant: permit, prefix: 1.1.1.0/24}

# Review static routes and if the static routes to the alternate gateway are 
# redistributed into the following networks you networks 
# BGP
# IGP Peering Into A NIPERNet gateway
# Or Any Other Autonomous System
# You must set true to the staticroute_redistributed option below for each of the routing 
# protocols you are using that connect to.
# iosrtr_ospf_staticroute_redistributed is the toggle for a OSPF protocol if the static routes connect to one of the three 
# listed above you must toggle it to true.
iosrtr_ospf_staticroute_redistributed: true
# iosrtr_ospf_process_number is the number assigned when setting up new ospf routes or assigned to exisitng routes
# you already have configred in your router.  If you have more then one you can add them in list form here to be checked
# for compliance if you know they are distributed into the netowrks listed above.  
iosrtr_ospf_process_number: 
    - '1'
# iosrtr_eigrp_staticroute_redistributed is the toggle for a EIGRP protocol if the static routes connect to one of the three 
# listed above you must toggle it to true.
iosrtr_eigrp_staticroute_redistributed: true
# iosrtr_eigrp_as_number AS (Autonomous System) number that you are assiging to the router or the group the router 
# is part of
iosrtr_eigrp_as_number: 
    - '1'
# iosrtr_rip_staticroute_redistributed is the toggle for a RIP protocol if the static routes connect to one of the three 
# listed above you must toggle it to true.
iosrtr_rip_staticroute_redistributed: false
# iosrtr_bgp_staticroute_redistributed is the toggle for a BGP protocol if the static routes connect to one of the three 
# listed above you must toggle it to true.
iosrtr_bgp_staticroute_redistributed: true
# iosrtr_bgp_router_number is the AS (Autonomous System) number that you are assiging to the router or the group the router 
# is part of. Note: The current module used here does not allow for a replacement of the BGP number at the moment.  This
# should be run on a new config or assign it to match your existing BGP AS you have assigned to check compliance.    
iosrtr_bgp_as_router_number: 1123





  











# CISC-RT-000360
# iosrtr_lldp_external_interfaces is the external facing interfaces that will have lldp 
# disabled if the end user wants to have lldp enabled globally.  If not and lldp is disabled globally
# then no interfaces will be modified.
iosrtr_lldp_external_interfaces: 
    - 'FastEthernet2/0'


# CISC-RT-000370
# iosrtr_cdp_external_interfaces is the external facing interfaces that will have cdp
# disabled if the end user wants to have cdp enabled globally.  If not and cdp is disabled globally
# then no interfaces will be modified.
iosrtr_cdp_external_interfaces: 
    - 'FastEthernet2/0'


# CISC-RT-000540
# iosrtr_bgp_autonomous_system_number is the variable that will be set that is associated
# with with your devices AS (Autonomous System) number that BGP peers will receive in 
# the router advertisements.  
iosrtr_bgp_autonomous_system_number: 1123


# CISC_RT_000550
# https://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/13754-26.pdf
iosrtr_receive_only_routes_originated_from_as: 1123
# iosrtr_bgp_neighbor_address is used in the control to reject route advertisements from CE ( Customer Edge Routers )
# routers with an originating AS in the AS_PATH attribute that does not belong to that customer. All PE ( Provider Edge )
# routers miust be configed to reject routes with an AS other then that belonging to customer.  
iosrtr_bgp_neighbor_address: 
  - 1.1.1.1

# CISC_RT_000570
# NOTE: Currently there is a known issue with ansible where if the wrong prefix and subnet are entered
# the task does not fail properly.  PLEASE DOUBLE CHECK YOUR PREFIX'S WHEN ENTERING THEM.  
# { seq: mandatory, action: mandatory, prefix: mandatory, ge: can be omitted, le: can be omitted }
iosrtr_prefix_limit_data:
    - { seq: 10, action: permit, prefix: 13.0.0.0/8, ge: 10, le: 24 }
    - { seq: 20, action: deny, prefix: 12.0.0.0/8, le: 32 }

iosrtr_ebgp_neighbors:
    - '1.1.1.1'
    - '13.13.13.13'



# CISC_RT_000580
# iosrtr_ibgp_neighbor_loopback_ip is the ip address of the iBGP router that is a neighbor router that is not considered 
# a eBGP router.  This is in list form so if you only have one router you are connecting to internally then you may remove 
# the second line item.  
iosrtr_ibgp_neighbor_loopback: 
    - '7.7.7.7'
    - '8.8.8.8'
# iosrtr_remote_as_number is the Autonomous System number of the router you are creating the neighbor relationship with.
# this can be the same AS as the current router or another depending on how you have your network design setup.  
# This is in list form so if you only have one router you are connecting to internally then you may remove 
# the second line item.  This pairs with the iosrtr_ibgp_neighbor_loopback_ip in the variable above. 
iosrtr_remote_as_number: 
    - '1123'
    - '1123'
# iosrtr_loopback_interface is the interface configured to use a loopback address as the source address for 
# iBGP peering sessions.
iosrtr_loopback_interface: 'Loopback 0'



# CISC-RT-000590
# iosrtr_loopback_interface_source is the loopback interface that is used for LDP peering sessions. 
iosrtr_loopback_interface_source: 'Loopback 0'


# CISC-RT-000600
# iosrtr_opsf_process_id is the variable to set for the ospf processes need to have ldp sync applied to 
# to make sure that they are in compliance.  
iosrtr_opsf_process_id:
    - '1'
# iosrtr_ospf_ldp_sync is to be set to true to apply the rule to make it compliant.  Set to False if you would 
# like the task skipped. 
iosrtr_ospf_ldp_sync: true
# iosrtr_isis_ldp_sync is to be set to true to apply the rule to make it compliant.  Set to False if you would 
# like the task skipped. 
iosrtr_isis_ldp_sync: false


# CISC-RT-000610
# Control CISC-RT-000610 will enable MPLS TE Globally but at least one interface must be set with the 
# mpls traffic-eng tunnels.  Below is where you can add those interfaces to assign mpls traffic-eng tunnels
# to on the router. RSVP rate limiting maintains, on an outgoing interface basis.
iosrtr_interfaces_mpls_traffic_eng_tunnels:
    - 'FastEthernet0/0'
    - 'FastEthernet0/1'
# The variables below in iosrtr_ip_rsvp_signalling_rate_limit are all optional commands for Cisco to adjust defaults.
# For the router to be compliant these variables in the command line must be set to rate limit RSVP messages 
# based on the link speed and input queue size of the adjacent core routers.
# For the items to be passed properly make sure you not only include the names but also the numbers you are wanting to apply. 
iosrtr_ip_rsvp_signalling_rate_limit: 
    - {period: period 30, burst: burst 9, maxsize: maxsize 2100, limit: limit 50}


# CISC-RT-000760
iosrtr_classmap_name:
    - PREFERRED_DATA
    - CONTROL_PLANE
    - VIDEO
    - VOICE
    - C2_VOICE

iosrtr_classmap_dscp_value:
    - af33
    - cs6
    - af41
    - ef
    - '47'

iosrtr_policymap_name:
    - CONTROL_PLANE
    - C2_VOICE
    - VOICE
    - VIDEO
    - PREFERRED_DATA
    - class-default

# By default in IOS a QoS policy applied will only reserve up to 75% of a link's available bandwidth. 
# The idea behind this is to leave a bit of headroom for routing protocols and other critical traffic which might not otherwise be accounted for in a QoS policy. 
iosrtr_policymap_bandwidth_percentage:
    - '10'
    - '10'
    - '15'
    - '25'
    - '25'
    - '15'



# CISC-RT-000810
# iosrtr_scoped_multicast_traffic_access_list_name_old is used to remove the old access control list for scoped multicast traffic access.  
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_scoped_multicast_traffic_access_list_name_old: MULTICAST_SCOPE
# iosrtr_scoped_multicast_traffic_access_list_name is the name of the new access control list used to configure the router to 
# deny packets with multicast administratively scoped destination addresses.
iosrtr_scoped_multicast_traffic_access_list_name: MULTICAST_SCOPE
# iosrtr_scoped_multicast_traffic_access_list_type is the setting for a standard or extended access-list.  In this case it should be set for standard. 
iosrtr_scoped_multicast_traffic_access_list_type: standard
# Below is the example of a access control list for making sure the router has establish boundaries for administratively scoped multicast traffic.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
# - {seq: , grant: , source_any: , source_host: , source_address: , source_wildcard_bits:}
# The configuration below yields the following example on the router.
# ip access-list standard MULTICAST_SCOPE
# deny   239.0.0.0 0.255.255.255
# permit any
iosrtr_scoped_multicast_traffic_acl:
    - {seq: 10, grant: deny, source_address: 239.0.0.0, source_wildcard_bits: 0.255.255.255}
    - {seq: 20, grant: permit, source_any: true}
# iosrtr_multicast_boundary_interfaces are the interfaces that the access conrtrol list will be attached to.
iosrtr_multicast_boundary_interfaces:
    - FastEthernet2/0




# CISC-RT-000820
# CISC-RT-000830
# iosrtr_pim_register_filter_acl_name_old is used to remove the old access control list for the pim register filter.  
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_pim_register_filter_acl_name_old: PIM_REGISTER_FILTER
# iosrtr_pim_register_filter_acl_name_new is the name of the new access control list used to configure the  
# router to filter PIM register messages received from a multicast DR for any undesirable multicast groups and sources.
iosrtr_pim_register_filter_acl_name_new: PIM_REGISTER_FILTER
# iosrtr_pim_register_filter_acl_type is the setting for a standard or extended access-list.  In this case it should be set for extended. 
iosrtr_pim_register_filter_acl_type: extended
# Below is the example of a access control list for configuring the router to filter PIM register messages received from a multicast DR for any undesirable multicast 
# groups and sources. The example below will deny any multicast streams for groups 239.5.0.0/16 and allow from only sources 10.1.2.6 and 10.1.2.7. 
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
# - {seq: , grant: , protocol: , source_any: , source_host: , source_address: , source_wildcard_bits: , destination_any: , destination_host: , destination_wildcard_bits:}
# The configuration below yields the following example on the router.
# ip access-list extended PIM_REGISTER_FILTER
# deny   ip any 239.5.0.0 0.0.255.255
# permit ip host 10.1.2.6 any
# permit ip host 10.1.2.7 any
# deny   ip any any
iosrtr_pim_register_filter_traffic_acl:
    - {seq: 10, grant: deny, protocol: ip, source_any: true, destination_any: false, destination_address: 239.5.0.0, destination_wildcard_bits: 0.0.255.255}
    - {seq: 20, grant: permit, protocol: ip, source_any: false, source_host: 10.1.2.6, destination_any: true}
    - {seq: 30, grant: permit, protocol: ip, source_any: false, source_host: 10.1.2.7, destination_any: true}
    - {seq: 40, grant: deny, protocol: ip, source_any: true, destination_any: true}
# iosrtr_pim_register_rate_limit is used to configure the RP to rate limit the number of multicast register messages.
iosrtr_pim_register_rate_limit: '50'


# iosrtr_msdp_known_peers_acl_name_old is used to remove the old access control list for msdp known peers.  
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_msdp_known_peers_acl_name_old: EXTERNAL_ACL_INBOUND
# iosrtr_msdp_known_peers_acl_name_new is the name of the new access control list used to configure the receive 
# path or interface ACLs to only accepts MSDP packets from known MSDP peers.
iosrtr_msdp_known_peers_acl_name_new: EXTERNAL_ACL_INBOUND
# iosrtr_msdp_known_peers_acl_type # iosrtr_scoped_multicast_traffic_access_list_type is the setting for a standard or extended access-list.  In this case it should be set for extended. 
iosrtr_msdp_known_peers_acl_type: extended
# Below is the example of a access control list for configuring the receive path or interface ACLs to only accepts MSDP packets from known MSDP peers. 
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
#  - {seq: , grant: , protocol: , source_any: , source_host: , source_address: , source_wildcard_bits: , source_port_protocol_eq: , destination_any: , destination_host: , destination_address: , destination_wildcard_bits: , destination_port_protocol_eq: , destination_protocol_options_tcp_established:}
# The configuration below yields the following example on the router.
# ip access-list extended EXTERNAL_ACL_INBOUND
# permit tcp any any established
# permit tcp host 1.1.28.2 host 2.1.28.8 eq 639
# deny   tcp any host 2.1.28.8 eq 639
# permit tcp host 1.1.28.2 host 2.1.28.8 eq bgp
# permit tcp host 1.1.28.2 host 2.1.28.8
# permit pim host 1.1.28.2 host 2.1.28.8
# deny   ip any any
iosrtr_msdp_known_peers_acl:
    - {seq: 10, grant: permit, protocol: tcp, source_any: true, destination_any: true, destination_protocol_options_tcp_established: true}
    - {seq: 20, grant: permit, protocol: tcp, source_host: 1.1.28.2, destination_host: 2.1.28.8, destination_port_protocol_eq: 639}
    - {seq: 30, grant: deny, protocol: tcp, source_any: true, destination_host: 2.1.28.8, destination_port_protocol_eq: 639}
    - {seq: 40, grant: permit, protocol: tcp, source_host: 1.1.28.2, destination_host: 2.1.28.8, destination_port_protocol_eq: bgp}
    - {seq: 50, grant: permit, protocol: tcp, source_host: 1.1.28.2, source_port_protocol_eq: bgp, destination_host: 2.1.28.8}
    - {seq: 60, grant: permit, protocol: pim, source_host: 1.1.28.2, destination_host: 2.1.28.8}
    - {seq: 70, grant: deny, protocol: ip, source_any: true, destination_any: true}


# CISC-RT-000840
# iosrtr_filter_pim_joins_access_list_name_old is used to remove the old access control list for Protocol Independent Multicast (PIM) Join messages 
# received from the Designated Router (DR) for any undesirable multicast groups.
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_filter_pim_joins_acl_name_old: PIM_JOIN_FILTER
# iosrtr_filter_pim_joins_access_list_name is the name of the new access control list used to configure The Cisco multicast Rendezvous Point (RP) router to be configured to filter Protocol 
# Independent Multicast (PIM) Join messages received from the Designated Router (DR) for any undesirable multicast groups.
iosrtr_filter_pim_joins_acl_name: PIM_JOIN_FILTER
# iosrtr_filter_pim_joins_access_list_type is the setting for a standard or extended access-list.  In this case it should be set for standard. 
iosrtr_filter_pim_joins_acl_type: standard
# Below is the example of a access control list for making sure the Cisco multicast Rendezvous Point (RP) router must be configured to filter Protocol 
# Independent Multicast (PIM) Join messages received from the Designated Router (DR) for any undesirable multicast groups.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
# - {seq: , grant: , source_any: , source_host: , source_address: , source_wildcard_bits:}
# The configuration below yields the following example on the router.
# ip access-list standard PIM_JOIN_FILTER
# deny   239.0.0.0 0.0.255.255
# permit any
iosrtr_pim_join_filter_acl:
    - {seq: 10, grant: deny, source_address: 239.0.0.0, source_wildcard_bits: 0.0.255.255}
    - {seq: 20, grant: permit, source_any: true}


# CISC-RT-000860
# iosrtr_filter_pim_joins_access_list_name_old is used to remove the old access list that is used to filter IGMP or MLD Membership Report messages,
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_filter_igmp_joins_acl_name_old: IGMP_JOIN_FILTER
# iosrtr_filter_igmp_joins_access_list_name is the name of the new access control list to Configure the Designated Router (DR) to filter 
# the IGMP or MLD Membership Report messages to allow hosts to join only those multicast groups that have been approved.
iosrtr_filter_igmp_joins_acl_name: IGMP_JOIN_FILTER
# iosrtr_filter_pim_joins_access_list_type is the setting for a standard or extended access-list.  In this case it should be set for standard. 
iosrtr_filter_igmp_joins_acl_type: standard
# Below is the example of a access control list for making sure the Cisco multicast Designated Router (DR) must be configured to filter the Internet 
# Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Report messages to allow hosts to join only multicast groups that have been approved by the organization.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
# - { seq: , grant: , source_any: , source_host: , source_address: , source_wildcard_bits: }
# The configuration below yields the following example on the router.
# ip access-list standard IGMP_JOIN_FILTER
# deny   239.8.0.0 0.0.255.255
# permit any
iosrtr_igmp_join_filter_acl:
    - {seq: 10, grant: deny, source_address: 239.8.0.0, source_wildcard_bits: 0.0.255.255}
    - {seq: 20, grant: permit, source_any: true}
# iosrtr_multicast_boundary_interfaces are the interfaces that the access conrtrol list will be attached to.
iosrtr_igmp_join_filter_host_facing_interfaces:
    - FastEthernet0/0
    - FastEthernet0/1



# CISC-RT-000920
# iosrtr_inbound_msdp_sa_filter_acl_name_old is used to remove the old access list that is used to filter received source-active multicast 
# advertisements for any undesirable multicast groups and sources.
# If you did not have a existing access control list defined in the router leave as is.  
iosrtr_inbound_msdp_sa_filter_acl_name_old: INBOUND_MSDP_SA_FILTER
# iosrtr_inbound_msdp_sa_filter_acl_name is the name of the new access control list to configure the MSDP router 
# to filter received source-active multicast advertisements for any undesirable multicast groups and sources
iosrtr_inbound_msdp_sa_filter_acl_name: INBOUND_MSDP_SA_FILTER
# iosrtr_inbound_msdp_sa_filter_acl_type is the setting for a standard or extended access-list.  In this case it should be set for extended. 
iosrtr_inbound_msdp_sa_filter_acl_type: extended
# Below is the example of a access control list for making sure The Cisco Multicast Source Discovery Protocol (MSDP) router must be configured 
# to filter received source-active multicast advertisements for any undesirable multicast groups and sources.
# Additional variables may be added later depending on the need, this is currently configured to stig recommendations as well as cisco best practices documented on 
# the following website. https://www.cisco.com/c/en/us/support/docs/ip/ip-multicast/13717-49.pdf
# The line below is the current variables that are configured to be used, I have also broke them up into the categories based on the STIG.
# The ACL module does not allpw for ! Microsoft-ds to be passed, so it has been organized by group for this purpose and passed through.  
# - {seq: , grant: , protocol: , source_any: , source_host: , source_address: , source_wildcard_bits: , destination_any: , destination_host: , destination_wildcard_bits:}
iosrtr_inbound_msdp_sa_filter_acl:
# Domain Local Applications
# deny ip any host 224.0.1.3 ! Rwhod 
# deny ip any host 224.0.1.24 ! Microsoft-ds
# deny ip any host 224.0.1.22 ! SVRLOC
# deny ip any host 224.0.1.2 ! SGI-Dogfight
# deny ip any host 224.0.1.35 ! SVRLOC-DA
# deny ip any host 224.0.1.60 ! hp-device-disc
    - {seq: 10, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.3}
    - {seq: 20, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.24}
    - {seq: 30, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.22}
    - {seq: 40, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.2}
    - {seq: 50, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.35}
    - {seq: 60, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.60}
# Auto-RP Groups
# deny ip any host 224.0.1.39 ! Auto-RP
# deny ip any host 224.0.1.40 ! Auto-RP
    - {seq: 70, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.39}
    - {seq: 80, grant: deny, protocol: ip, source_any: true, destination_host: 224.0.1.40}
# Default SSM-Range
# deny ip any 232.0.0.0 0.255.255.255 ! SSM range
    - {seq: 90, grant: deny, protocol: ip, source_any: true, destination_address: 232.0.0.0, destination_wildcard_bits: 0.255.255.255}
# Admin Scoped Range
# deny ip any 239.0.0.0 0.255.255.255 ! Admin scoped range
    - {seq: 100, grant: deny, protocol: ip, source_any: true, destination_address: 239.0.0.0, destination_wildcard_bits: 0.255.255.255}
# RFC 1918 Address Range
# deny ip 10.0.0.0 0.255.255.255 any ! RFC 1918 address range
# deny ip 127.0.0.0 0.255.255.255 any ! RFC 1918 address range
# deny ip 172.16.0.0 0.15.255.255 any ! RFC 1918 address range
# deny ip 192.168.0.0 0.0.255.255 any ! RFC 1918 address range
    - {seq: 110, grant: deny, protocol: ip, source_address: 10.0.0.0, source_wildcard_bits: 0.255.255.255, destination_any: true}
    - {seq: 120, grant: deny, protocol: ip, source_address: 127.0.0.0, source_wildcard_bits: 0.255.255.255, destination_any: true}
    - {seq: 130, grant: deny, protocol: ip, source_address: 172.16.0.0, source_wildcard_bits: 0.15.255.255, destination_any: true}
    - {seq: 140, grant: deny, protocol: ip, source_address: 192.168.0.0, source_wildcard_bits: 0.0.255.255, destination_any: true}
# Permit Ip Any Any
    - {seq: 150, grant: permit, protocol: ip, source_any: true, destination_any: true}
# iosrtr_inbound_msdp_peer_source_active_filter_peer_address is the addresss of the inbound MSDP peer the source-active filter is bound to.  You may 
# add additional address below in list form to attach it to more then one peer.  
iosrtr_inbound_msdp_peer_source_active_filter_peer_address: 
    - {peer_address: 1.1.28.2}




# CISC-RT-000930



# CISC-RT-000940
# iosrtr_msdp_source_active_msg_per_peers is the variables that need to be set to limit the amount of source-active messages it accepts on a per-peer basis. 
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
# - { msdp_peer: , source_active_msg_limit: }
# The configuration below yields the following example on the router.
# ip msdp sa-limit 1.1.28.2 320
iosrtr_msdp_source_active_msg_per_peers:
    - {msdp_peer: 1.1.28.2, source_active_msg_limit: 320}


# CISC-RT-000940
# iosrtr_msdp_packets_sending_loopback_address is the configuration to use its loopback address is used as the source address when sending MSDP packets.
# Additional variables may be added later depending on the need, this is currently configured to stig example. The line below is the current variables that are configured to be used. 
# - { msdp_peer: , loopback_interface: , remote_as: }
# The configuration below yields the following example on the router.
# ip msdp peer 1.44.2.34 connect-source Loopback0 remote-as 2
iosrtr_msdp_packets_sending_loopback_address:
    - {msdp_peer: 1.44.2.34 , loopback_interface: loopback 0, remote_as: 2}

# CISC-RT-000470

iosrtr_ebgp_ttl_security_settings:
    - {ebgp_neighbor_address: 7.7.7.7, ttl_security_number_of_hops: 10}
