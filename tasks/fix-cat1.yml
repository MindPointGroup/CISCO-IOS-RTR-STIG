---
- name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself."
  block:
    - name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself. | Remove Old External Access List."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                  - name: "{{ iosrtr_external_acl_name_old }}"
          state: deleted

    - name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself. | Configure the ACL for any external interfaces."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                - name: "{{ iosrtr_external_acl_name_new }}"
                  acl_type: "{{ iosrtr_external_acl_type }}"
                  aces:
                  - grant: '{{ item.grant | default(omit) }}'
                    sequence: '{{ item.seq | default(omit) }}'
                    log_input: 
                      set: '{{ item.log_input | default(omit) }}'
                    protocol: '{{ item.protocol | default(omit) }}'
                    protocol_options: 
                      tcp:
                        established: '{{ item.protocol_options_tcp_established | default(omit) }}'
                      icmp:
                        echo: '{{ item.protocol_options_icmp_echo | default(omit) }}'
                        echo_reply: '{{ item.protocol_options_icmp_echo_reply | default(omit) }}'
                    source: 
                      any: '{{ item.source_any | default(omit) }}'
                      host: '{{ item.source_host | default(omit) }}'
                      address: '{{ item.source_address | default(omit) }}'
                      wildcard_bits: '{{ item.source_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.source_port_protocol_eq | default(omit) }}' 
                    destination:
                      any: '{{ item.destination_any | default(omit) }}'
                      host: '{{ item.destination_host | default(omit) }}'
                      address: '{{ item.destination_address | default(omit) }}'
                      wildcard_bits: '{{ item.destination_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.destination_port_protocol_eq | default(omit) }}' 
      with_items: 
          - "{{ iosrtr_external_acl }}"

    - name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself. | Remove Old Internal Access List"
      ios_acls:
          config:
              - afi: ipv4
                acls:
                  - name: "{{ iosrtr_internal_acl_name_old }}"
          state: deleted

    - name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself. | Configure the ACL for any internal interfaces."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                - name: "{{ iosrtr_internal_acl_name_new }}"
                  acl_type: "{{ iosrtr_internal_acl_type }}"
                  aces:
                  - grant: '{{ item.grant | default(omit) }}'
                    sequence: '{{ item.seq | default(omit) }}'
                    log_input: 
                      set: '{{ item.log_input | default(omit) }}'
                    protocol: '{{ item.protocol | default(omit) }}'
                    protocol_options: 
                      tcp:
                        established: '{{ item.protocol_options_tcp_established | default(omit) }}'
                      icmp:
                        echo: '{{ item.protocol_options_icmp_echo | default(omit) }}'
                        echo_reply: '{{ item.protocol_options_icmp_echo_reply | default(omit) }}'
                    source: 
                      any: '{{ item.source_any | default(omit) }}'
                      host: '{{ item.source_host | default(omit) }}'
                      address: '{{ item.source_address | default(omit) }}'
                      wildcard_bits: '{{ item.source_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.source_port_protocol_eq | default(omit) }}' 
                    destination:
                      any: '{{ item.destination_any | default(omit) }}'
                      host: '{{ item.destination_host | default(omit) }}'
                      address: '{{ item.destination_address | default(omit) }}'
                      wildcard_bits: '{{ item.destination_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.destination_port_protocol_eq | default(omit) }}' 
      with_items: 
          - "{{ iosrtr_internal_acl }}"

    - name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself. | Apply EXTERNAL_ACL to proper interfaces."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - "ip access-group {{ iosrtr_external_acl_name_new }} in"
      with_items:
        - "{{ iosrtr_external_acl_interfaces }}"

    - name: "HIGH | CISC-RT-000130 | PATCH | The Cisco router must be configured to restrict traffic destined to itself. | Apply INTERNAL_ACL to proper interfaces."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - "ip access-group {{ iosrtr_internal_acl_name_new }} in"
      with_items:
        - "{{ iosrtr_internal_acl_interfaces }}"
  when:
      - cisc_rt_000130
  tags:
      - CISC-RT-000130
      - CAT1
      - CCI-001097
      - SRG-NET-000205-RTR-000001
      - SV-216561r531085_rule
      - V-216561

- name: "HIGH | CISC-RT-000240 | PATCH | The Cisco perimeter router must be configured to deny network traffic by default and allow network traffic by exception."
  block:
    - name: "HIGH | CISC-RT-000240 | PATCH | The Cisco perimeter router must be configured to deny network traffic by default and allow network traffic by exception. | Search Inbound ACL To Verify That It Is Configured To Deny All Other Traffic That Is Not Explicity Allowed."
      ios_command:
        commands:
          - "show run | section ip access-list extended {{ iosrtr_external_acl_name_new }}"
      register: iosrtr_deny_all_other_traffic
    
    - name: "HIGH | CISC-RT-000240 | PATCH | The Cisco perimeter router must be configured to deny network traffic by default and allow network traffic by exception. | Correct The ACL By Adding Proper Configuration To Deny All Other Traffic That Is Not Explicity Allowed."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                - name: "{{ iosrtr_external_acl_name_new }}"
                  acl_type: "{{ iosrtr_external_acl_type }}"
                  aces:
                  - grant: deny
                    sequence: 200
                    log_input: 
                      set: true
                    protocol: ip 
                    source: 
                      any: true
                    destination:
                      any: true
      when: "'deny   ip any any log-input' not in iosrtr_deny_all_other_traffic"
  when:
      - cisc_rt_000240
      - not cisc_rt_dodin_backbone
  tags:
      - CISC-RT-000240
      - CAT1
      - CCI-001109
      - SRG-NET-000202-RTR-000001
      - SV-216572r531085_rule
      - V-216572

- name: "HIGH | CISC-RT-000280 | PATCH | The Cisco perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the sites address space."
  block:
    - name: "HIGH | CISC-RT-000280 | PATCH | The Cisco perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the sites address space. | Rmmove Old FILTER_ISP Access Control Lost."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                  - name: "{{ iosrtr_filter_isp_name_old }}"
          state: deleted

    - name: "HIGH | CISC-RT-000280 | PATCH | The Cisco perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the sites address space. | Configure The New Ingress ACL For FILTER_ISP."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                - name: "{{ iosrtr_filter_isp_acl_name_new }}"
                  acl_type: "{{ iosrtr_filter_isp_acl_type }}"
                  aces:
                  - grant: '{{ item.grant | default(omit) }}'
                    sequence: '{{ item.seq | default(omit) }}'
                    log_input: 
                      set: '{{ item.log_input | default(omit) }}'
                    protocol: '{{ item.protocol | default(omit) }}'
                    protocol_options: 
                      tcp:
                        established: '{{ item.protocol_options_tcp_established | default(omit) }}'
                      icmp:
                        echo: '{{ item.protocol_options_icmp_echo | default(omit) }}'
                        echo_reply: '{{ item.protocol_options_icmp_echo_reply | default(omit) }}'
                    source: 
                      any: '{{ item.source_any | default(omit) }}'
                      host: '{{ item.source_host | default(omit) }}'
                      address: '{{ item.source_address | default(omit) }}'
                      wildcard_bits: '{{ item.source_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.source_port_protocol_eq | default(omit) }}' 
                    destination:
                      any: '{{ item.destination_any | default(omit) }}'
                      host: '{{ item.destination_host | default(omit) }}'
                      address: '{{ item.destination_address | default(omit) }}'
                      wildcard_bits: '{{ item.destination_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.destination_port_protocol_eq | default(omit) }}' 
      with_items: 
          - "{{ iosrtr_filter_isp_acl }}"

    - name: "HIGH | CISC-RT-000280 | PATCH | The Cisco perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the sites address space. | Attach FILTER_ISP to Inbound Interface and Add Description."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - description {{ iosrtr_filter_isp_interface_description }}
          - "ip access-group {{ iosrtr_filter_isp_acl_name_new }} in"
      with_items:
        - "{{ iosrtr_filter_isp_acl_interfaces }}"
  when:
      - cisc_rt_000280
      - not cisc_rt_dodin_backbone
  tags:
      - CISC-RT-000280
      - CAT1
      - CCI-001414
      - SRG-NET-000019-RTR-000008
      - SV-216576r531085_rule
      - V-216576

- name: "HIGH | CISC-RT-000290 | PATCH | The Cisco perimeter router must be configured to not be a Border Gateway Protocol (BGP) peer to an alternate gateway service provider."
  block:
    - name: Verify that the router is not BGP peering with this router.
      ios_command:
          commands:
            - "show run | section include bgp"
      register: iosrtr_bgp_peering_with_alterrnate_gateway_service_provider

    - name: "HIGH | CISC-RT-000290 | PATCH | The Cisco perimeter router must be configured to not be a Border Gateway Protocol (BGP) peer to an alternate gateway service provider. | Set Fact For Neighbor Ip Addresses."
      set_fact:
          list: "{{ iosrtr_bgp_peering_with_alterrnate_gateway_service_provider.stdout_lines | regex_findall('((?:[0-9]{1,3}.){3}[0-9]{1,3})') }}"

    - name: "HIGH | CISC-RT-000290 | PATCH | The Cisco perimeter router must be configured to not be a Border Gateway Protocol (BGP) peer to an alternate gateway service provider. | Add Static Route If It Is BGP Peering With Provider."
      ios_static_routes:
          config:
          - address_families:
            - afi: ipv4
              routes:
                - dest: 0.0.0.0/0
                  next_hops:
                    - forward_router_address: "{{ item }}"
      with_items:
        - "{{ iosrtr_isp_router_ip_address }}"
      when: item in list
      
    - name: "HIGH | CISC-RT-000290 | PATCH | The Cisco perimeter router must be configured to not be a Border Gateway Protocol (BGP) peer to an alternate gateway service provider. | Remove any BGP Peering neighbors from configuration."
      ios_config:
          parents:
            - "router bgp {{ iosrtr_local_bgp_autonomous_system_number }}"
          lines:
            - "no neighbor {{ item }}"
      with_items:
        - "{{ iosrtr_isp_router_ip_address }}"
      when: item in list
  when:
      - cisc_rt_000290
      - not cisc_rt_dodin_backbone
  tags:
      - CISC-RT-000290
      - CAT1
      - CCI-001414
      - SRG-NET-000019-RTR-000009
      - SV-216577r531085_rule
      - V-216577

- name: | 
        "HIGH | CISC-RT-000630 | PATCH | The Cisco PE router must be configured to have each Virtual Routing and Forwarding (VRF) instance bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs."
        "HIGH | CISC-RT-000640 | PATCH | The Cisco PE router must be configured to have each Virtual Routing and Forwarding (VRF) instance with the appropriate Route Target (RT)."
  block:
    - name: "Check For Active VRF's For Stig"
      ios_command:
        commands: 
          - show run | include ip vrf
      register: cisc_rt_000630_ip_vrf_active
      # with_items: 
      #   - "{{ iosrtr_ce_facing_vrf_interfaces }}"

    - name: set fact
      set_fact:
        list_prune: "{{ cisc_rt_000630_ip_vrf_active.stdout_lines | regex_replace('ip vrf forwarding ', '') | regex_replace('ip vrf ', '')  }}"
    
    - name: Print Fact
      debug:
        msg: "{{ list_prune }}"
    
    - name: "Clear Exiting VRF From iosrtr_ce_facing_vrf_interfaces"
      ios_vrf_lite:
        name: "{{ list_prune }}"
        state: absent
      when: list_prune.stdout_lines not in item.vrf_route_name
      with_items:
        - "{{ iosrtr_ce_facing_vrf_interfaces }}"

    
    - name: Wait For delete
      wait_for_connection:
        delay: 10

    # - name: "Create VRF Entries"
    #   ios_vrf_lite:
    #     name: "{{ item.vrf_route_name | default(omit) }}"
    #     rd: "{{ item.route_distinguisher | default(omit) }}"
    #     route_export:
    #     - "{{ item.route_target_export | default(omit) }}"
    #     route_import:
    #     - "{{ item.route_target_import | default(omit) }}"
    #   with_items:
    #     - "{{ iosrtr_ce_facing_vrf_interfaces }}"

    # - name: Check To See if description matches
    #   ios_command:
    #     commands: 
    #       - show run | include description
    #   register: cisc_rt_000630_vrf_description_check

    # - name: Add Description
    #   ios_config:
    #     parents: ip vrf {{ item.vrf_route_name }}
    #     commands: description {{ item.vrf_description }}
    #   when: item.vrf_description not in cisc_rt_000630_vrf_description_check
    #   with_items:
    #     - "{{ iosrtr_ce_facing_vrf_interfaces }}"

    # - name: Apply VRF To Interfaces
    #   ios_config:
    #     parents: interface {{ item.interface }}
    #     lines: 
    #       - ip vrf forwarding {{ item.vrf_route_name }}
    #   with_items: 
    #     - "{{ iosrtr_ce_facing_vrf_interfaces }}"
    
    # - name: Apply IP Address Back On Interface
    #   ios_config:
    #     parents: interface {{ item.interface }}
    #     lines: 
    #       - ip address {{ item.ip_address }} {{ item.ip_subnet }}
    #   with_items: 
    #     - "{{ iosrtr_ce_facing_vrf_interfaces }}"
  when:
      - cisc_rt_000630 or cisc_rt_000640
  tags:
      - CISC-RT-000630
      - CISC-RT-000640
      - CAT1
      - CCI-000366
      - SRG-NET-000512-RTR-000005
      - SRG-NET-000512-RTR-000006
      - SV-216611r531085_rule
      - SV-216612r531085_rule
      - V-216611
      - V-216612

- name: "HIGH | CISC-RT-000670 | PATCH | The Cisco PE router providing MPLS Virtual Private Wire Service (VPWS) must be configured to have the appropriate virtual circuit identification (VC ID) for each attachment circuit."
  ios_config:
    parents:
      - interface {{ item.interface }}
    lines:
      - xconnect {{ item.ip_address }} {{ item.vcid }} encapsulation mpls
  with_items:
    - "{{ ios_rtr_vcid_ce_facing }}"
  when:
      - cisc_rt_000670
  tags:
      - CISC-RT-000670
      - CAT1
      - CCI-000366
      - SRG-NET-000512-RTR-000008
      - SV-216615r531085_rule
      - V-216615

- name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure."
  block:
    - name: HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Remove Old ACL." 
      ios_acls:
        config:
          - afi: ipv4
            acls:
              - name: "{{ iosrtr_block_to_core_acl_name_old }}"
        state: deleted
      when: 
        - "'none' not in iosrtr_block_to_core_acl_name_old"

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Parse Given ACL From host_vars."
      ios_acls:
        running_config: "{{ lookup('file','host_vars/cisc-rt-000730') }}"
        state: parsed
      register: cisc_rt_000730_acl_parsed

    - name: Convert JSON to DICT For ACL Name
      set_fact:
        cisc_rt_000730_acl_name: "{{ cisc_rt_000730_acl_parsed.parsed.0.acls.0.name }}"

    - name: debug
      debug:
        msg: "{{ cisc_rt_000730_acl_name }}"
    
    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Compare And Reconsile ACL."
      ios_acls:
        config: "{{ cisc_rt_000730_acl_parsed.parsed }}"
        state: replaced
      register: cisc_rt_000730_acl_ran

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Print Changed Lines With Debug Acl Is Changed."
      debug:
        var: cisc_rt_000730_acl_ran.commands
      when: cisc_rt_000730_acl_ran.changed == true

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Gather Interface Facts."
      ios_interfaces:
        state: gathered
      register: cisc_rt_000730_interfaceinfo

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Register Show Run With Interfaces."
      ios_command:
        commands: 
          - "show run | section {{ item.name }}" 
      with_items: "{{ cisc_rt_000730_interfaceinfo.gathered }}"
      register: cisc_rt_000730_interfaceinfo_showrun

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Set Fact For Interface Name And Stdout." 
      set_fact:
        cisc_rt_000730_intname: "{{ cisc_rt_000730_interfaceinfo_showrun.results | map(attribute='item.name') }}"
        cisc_rt_000730_intstdout: "{{ cisc_rt_000730_interfaceinfo_showrun.results | map(attribute='stdout') }}"

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Remove ACL from Interface Not In List."
      ios_config:
        parents:
          - "interface {{ item.0 }}"
        lines:
          - "no ip access-group {{ cisc_rt_000730_acl_name }} in"
      with_together: 
        - "{{ cisc_rt_000730_intname }}"
        - "{{ cisc_rt_000730_intstdout }}"
      when:
        - item.0 not in iosrtr_external_facing_interfaces
        - cisc_rt_000730_acl_name in item.1

    - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Attach ACL To CE Or External Interfaces."
      ios_config:
        parents:
          - "interface {{ item.0 }}"
        lines:
          - "ip access-group {{ cisc_rt_000730_acl_name }} in"
      with_together: 
        - "{{ cisc_rt_000730_intname }}"
        - "{{ cisc_rt_000730_intstdout }}"
      when:
        - item.0 in iosrtr_external_facing_interfaces
        - cisc_rt_000730_acl_name not in item.1
  when:
      - cisc_rt_000730
  tags:
      - CISC-RT-000730
      - CAT1
      - CCI-001097
      - SRG-NET-000205-RTR-000007
      - SV-216616r531085_rule
      - V-216616








- name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure."
  block: 
    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Remove Existing Egress ACL."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                  - name: "{{ iosrtr_egress_acl_filter_old }}"
          state: deleted
      when:
        - iosrtr_egress_acl_filter or iosrtr_unicast_reverse_path_forwarding

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Create New EGRESS_FILTER."
      ios_acls:
          config:
              - afi: ipv4
                acls:
                - name: "{{ iosrtr_egrees_acl_filter_new }}"
                  acl_type: "{{ iosrtr_egress_acl_filter_type }}"
                  aces:
                  - grant: '{{ item.grant | default(omit) }}'
                    sequence: '{{ item.seq | default(omit) }}'
                    log_input: 
                      set: '{{ item.log_input | default(omit) }}'
                    protocol: '{{ item.protocol | default(omit) }}'
                    protocol_options: 
                      tcp:
                        established: '{{ item.protocol_options_tcp_established | default(omit) }}'
                      icmp:
                        echo: '{{ item.protocol_options_icmp_echo | default(omit) }}'
                        echo_reply: '{{ item.protocol_options_icmp_echo_reply | default(omit) }}'
                    source: 
                      any: '{{ item.source_any | default(omit) }}'
                      host: '{{ item.source_host | default(omit) }}'
                      address: '{{ item.source_address | default(omit) }}'
                      wildcard_bits: '{{ item.source_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.source_port_protocol_eq | default(omit) }}' 
                    destination:
                      any: '{{ item.destination_any | default(omit) }}'
                      host: '{{ item.destination_host | default(omit) }}'
                      address: '{{ item.destination_address | default(omit) }}'
                      wildcard_bits: '{{ item.destination_wildcard_bits | default(omit) }}'
                      port_protocol:
                        eq: '{{ item.destination_port_protocol_eq | default(omit) }}'
      with_items: 
          - "{{ iosrtr_egress_filter_acl }}"
      when: 
        - iosrtr_egress_acl_filter

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Apply The EGRESS_FILTER To Interface."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - "ip access-group {{ iosrtr_egrees_acl_filter_new }} in"
      with_items:
        - "{{ iosrtr_egress_internal_interfaces }}"
      when:
        - iosrtr_egress_acl_filter

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Remove UPF from Interfaces Because ACL has Been Selected."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - "no ip verify unicast source reachable-via rx"
      with_items:
        - "{{ iosrtr_egress_internal_interfaces }}"
      when:
        - iosrtr_egress_acl_filter

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Apply uRPF To Interfaces."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - "ip verify unicast source reachable-via rx"
      with_items:
        - "{{ iosrtr_egress_internal_interfaces }}"
      when: 
        - iosrtr_unicast_reverse_path_forwarding

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Gather Interface Facts."
      ios_interfaces:
        state: gathered
      register: cisc_rt_000310_interfaceinfo

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Set Fact For Interfaces With Description."
      set_fact:
        cisc_rt_000310_interface_with_descriptions: "{{ item.name, item.description }}"
      with_items: "{{ cisc_rt_000310_interfaceinfo.gathered }}"
      when: 
        - item.description is defined

    - name: "HIGH | CISC-RT-000310 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Fix Descriptions For iosrtr_egress_internal_interfaces."
      ios_config:
        parents:
          - "interface {{ item }}"
        lines:
          - "description {{ iosrtr_internal_interface_description }}"
      with_items: 
        - "{{ iosrtr_egress_internal_interfaces }}"
      when: 
        - cisc_rt_000310_interface_with_descriptions != iosrtr_internal_interface_description

    - name: Remove Description From Interface Not In iosrtr_egress_internal_interface
      ios_config:
        parents:
          - "interface {{ item.name }}"
        lines:
          - "no description"
      when: 
        - item.name not in iosrtr_egress_internal_interfaces
        - item.description is defined
        - item.description == iosrtr_internal_interface_description
      with_items: 
        - "{{ cisc_rt_000310_interfaceinfo.gathered }}"
  when:
      - cisc_rt_000310
      - not cisc_rt_dodin_backbone
  tags:
      - CISC-RT-000310
      - CAT1
      - CCI-001094
      - SRG-NET-000205-RTR-000014
      - SV-216989r531085_rule
      - V-216989









# - name: Gather static routes
#   block:
#     - name: Use the Prefix Lists resource module to gather the current config
#       ios_static_routes:
#         config:
#         state: gathered
#       register: ios_static_routes

#     - name: Print Static Routes To Screen
#       debug:
#         msg: "{{ ios_static_routes }}"

#     - name: Create Inventory Directory
#       file:
#         path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
#         state: directory

#     - name: Write Static Routes Configuration to File
#       copy:
#         content: "{{ ios_static_routes | to_nice_yaml }}"
#         dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/static_routes.yaml"
#   when:
#       - cisc_rt_static_routes






# - name: Gather Acl Facts
#   block:
#     - name: Use the ACLs resource module to gather the current config
#       ios_acls:
#         state: gathered
#       register: acls 

#     - name: Print ACLs To Screen
#       debug:
#         msg: "{{ acls }}"

#     - name: Create Inventory Directory
#       file:
#         path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
#         state: directory

#     - name: Write ACL Configuration to File
#       copy:
#         content: "{{ acls | to_nice_yaml }}"
#         dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/acls.yaml"
#   when:
#       - cisc_rt_acl


# - name: Gather BGP Facts
#   block:
#     - name: Use the bgps resource module to gather the current config
#       ios_bgp_global:
#         config:
#         state: gathered
#       register: bgps

#     - name: Print bgps To Screen
#       debug:
#         msg: "{{ bgps }}"

#     - name: Create Inventory Directory
#       file:
#         path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
#         state: directory

#     - name: Write bgp Configuration to File
#       copy:
#         content: "{{ bgps | to_nice_yaml }}"
#         dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/bgp.yaml"
#   when:
#       - cisc_rt_bgp


# - name: Gather Route Maps Facts
#   block:
#     - name: Use the Route Maps resource module to gather the current config
#       ios_route_maps:
#         config:
#         state: gathered
#       register: route_maps

#     - name: Print Route Maps To Screen
#       debug:
#         msg: "{{ route_maps }}"

#     - name: Create Inventory Directory
#       file:
#         path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
#         state: directory

#     - name: Write Route Maps Configuration to File
#       copy:
#         content: "{{ route_maps | to_nice_yaml }}"
#         dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/route_maps.yaml"
#   when:
#       - cisc_rt_route_maps



# - name: Gather Prefix Lists Facts
#   block:
#     - name: Use the Prefix Lists resource module to gather the current config
#       ios_prefix_lists:
#         config:
#         state: gathered
#   when:
#       - cisc_rt_prefix_lists

# - name: Gather ospf roesources Facts
#   block:
#     - name: Use the ospf interfaces resource module to gather the current config
#       ios_ospfv2:
#         config:
#         state: gathered
#       register: ios_ospfv2

#     - name: Print ospf interfaces To Screen
#       debug:
#         msg: "{{ ios_ospfv2 }}"

#     - name: Create Inventory Directory
#       file:
#         path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
#         state: directory

#     - name: Write ospf_resources Configuration to File
#       copy:
#         content: "{{ ios_ospfv2 | to_nice_yaml }}"
#         dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/ios_ospf_interfaces.yaml"
#   when:
#       - cisc_rt_ospf_maps







# - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure."
#   block:


#     - name: Set Fact For Interfaces With Description
#       set_fact:
#         cisc_rt_000710_interface_with_descriptions: "{{ item.name, item.description }}"
#       with_items: "{{ cisc_rt_000710_interfaceinfo.gathered }}"
#       when: 
#         - item.description is defined

#     - name: Fix Descriptions For iosrtr_egress_internal_interfaces
#       ios_config:
#         parents:
#           - "interface {{ item }}"
#         lines:
#           - "description {{ iosrtr_internal_interface_description }}"
#       with_items: 
#         - "{{ iosrtr_egress_internal_interfaces }}"
#       when: 
#         - cisc_rt_000310_interface_with_descriptions != iosrtr_internal_interface_description

#     - name: Remove Description From Interface Not In iosrtr_egress_internal_interface
#       ios_config:
#         parents:
#           - "interface {{ item.name }}"
#         lines:
#           - "no description"
#       when: 
#         - item.name not in iosrtr_egress_internal_interfaces
#         - item.description is defined
#         - item.description == iosrtr_internal_interface_description
#       with_items: 
#         - "{{ cisc_rt_000310_interfaceinfo.gathered }}"


      
#     - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Remove Old ACL."
#       ios_acls:
#           config:
#               - afi: ipv4
#                 acls:
#                   - name: "{{ iosrtr_block_to_core_acl_name_old }}"
#           state: deleted
#       when: 
#         - iosrtr_000730_acl_update

#     - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Create New ACL."
#       ios_acls:
#           state: replaced
#           config:
#               - afi: ipv4
#                 acls:
#                 - name: "{{ iosrtr_block_to_core_name_new }}"
#                   acl_type: "{{ iosrtr_block_to_core_acl_type }}"
#                   aces:
#                   - grant: '{{ item.grant | default(omit) }}'
#                     sequence: '{{ item.seq | default(omit) }}'
#                     log_input: 
#                       set: '{{ item.log_input | default(omit) }}'
#                     protocol: '{{ item.protocol | default(omit) }}'
#                     protocol_options: 
#                       tcp:
#                         established: '{{ item.protocol_options_tcp_established | default(omit) }}'
#                       icmp:
#                         echo: '{{ item.protocol_options_icmp_echo | default(omit) }}'
#                         echo_reply: '{{ item.protocol_options_icmp_echo_reply | default(omit) }}'
#                     source: 
#                       any: '{{ item.source_any | default(omit) }}'
#                       host: '{{ item.source_host | default(omit) }}'
#                       address: '{{ item.source_address | default(omit) }}'
#                       wildcard_bits: '{{ item.source_wildcard_bits | default(omit) }}'
#                       port_protocol:
#                         eq: '{{ item.source_port_protocol_eq | default(omit) }}' 
#                     destination:
#                       any: '{{ item.destination_any | default(omit) }}'
#                       host: '{{ item.destination_host | default(omit) }}'
#                       address: '{{ item.destination_address | default(omit) }}'
#                       wildcard_bits: '{{ item.destination_wildcard_bits | default(omit) }}'
#                       port_protocol:
#                         eq: '{{ item.destination_port_protocol_eq | default(omit) }}' 
#       with_items: 
#           - "{{ iosrtr_block_to_core_acl }}"
  
    # - name: Acquire Acl Info
    #   ios_acls: 
    #     config:
    #     state: gathered


    
    # - name: configure acl
    #   ios_config:
    #     lines:
    #       - "{{ item }}"
    #     parents: 'ip access-list extended BLOCK_TO_CORE'
    #     match: 
    #   with_items:
    #     - "{{ iosrtr_block_to_core_acl_new }}"
    #   when: iosrtr_block_to_core_acl_new not in ACL.stdout








 
    # - name: Set Fact For Interfaces With Description
    #   set_fact:
    #     cisc_rt_000710_interface_with_descriptions: "{{ item.name, item.description }}"
    #   with_items: "{{ cisc_rt_000710_interfaceinfo.gathered }}"
    #   when: 
    #     - item.description is defined

    # - name: Fix Descriptions For iosrtr_egress_internal_interfaces
    #   ios_config:
    #     parents:
    #       - "interface {{ item }}"
    #     lines:
    #       - "description {{ iosrtr_internal_interface_description }}"
    #   with_items: 
    #     - "{{ iosrtr_egress_internal_interfaces }}"
    #   when: 
    #     - cisc_rt_000310_interface_with_descriptions != iosrtr_internal_interface_description

    # - name: Remove Description From Interface Not In iosrtr_egress_internal_interface
    #   ios_config:
    #     parents:
    #       - "interface {{ item.name }}"
    #     lines:
    #       - "no description"
    #   when: 
    #     - item.name not in iosrtr_egress_internal_interfaces
    #     - item.description is defined
    #     - item.description == iosrtr_internal_interface_description
    #   with_items: 
    #     - "{{ cisc_rt_000310_interfaceinfo.gathered }}"











    # - name: "HIGH | CISC-RT-000730 | PATCH | The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure. | Attach to CE Or External Interfaces."
    #   ios_config:
    #     parents:
    #       - "interface {{ item }}"
    #     lines:
    #       - "ip access-group {{ iosrtr_block_to_core_name_new }} in"
    #   with_items:
        # - "{{ iosrtr_external_facing_interfaces }}"
  # when:
  #     - cisc_rt_000730
  # tags:
  #     - CISC-RT-000730
  #     - CAT1
  #     - CCI-001097
  #     - SRG-NET-000205-RTR-000007
  #     - SV-216616r531085_rule
  #     - V-216616